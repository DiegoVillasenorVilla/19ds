Ejercicios de Github (1ra parcial)




	

	

	your portfolio name: 19ds
	

	Las subrayadas ya las tengo completas y bien hechas.


	

	IMPORTANT
	

	Each js file must be autonomous, include everything it needs to run on a terminal/browser;
	

	functions, methods, and useCase showing results
	

	



	

	



	

	



	

	#sorting
	

	22.sorted(array)
	

	



	

	# binomial reusing
	

	21. n! =factorization.js
	

	20. P(n,r) = n! / (n-r)! =Permutation.js
	

	19. C(n,r)  = P(n,r) / r! =Combination.js
	

	18. catalán(n) = CatalanN.js
	

	= (2n
	

	   r ) / (n+1)
	

	



	

	# O(f(n))
	

	17. gcd(a,c) =gcd.js
	

	16. lcm(a,c) =lcm.js


	

	15. fibonacci(a)=Fibonacci.js
	

	14. prime(a)=Primes.js
	

	



	

	# arrays
	

	13. repeated() //devolver true o false si hay números repetidos =repeated.js
	

	12. howMany() //poner cuantas veces se repite cada uno de los repetidos=howmany.js
	

	11. list()  //Listar los números repetidos=lista.js
	

	



	

	# approximations
	

	10 sen x         = x - x^3/3! + x^5/5! - x^7/7! + … =senX.js
	

	9. cos x         = 1 - x^2/2! + x^4/4! - x^6/6! + …=cosX.js
	

	8. e^x         = 1 + x + x^2/2! + x^3/3! + … =eX.js
	

	8a. prove that e = e^1  = 1 + 1  +  1/2! + 1/3!   + ... ~ 2.7182
	

	



	

	# oracles
	

	7. s2 = 1+2+... = n(n+1)/2 ~ (n^2)/2  =Ejer5.js
	

	6. s3 = 1^2 + 2^2 + ... = n(n+1)(2n+2)/6 ~ (n^3)/3 =Ejer6.js
	

	5. s4 = 1^k + 2^k + ... ~ (n^(k+1))/(k+1) =Ejer7.js
	

	4. s5 = 1 + a + a^2 ... = ((a^(n+1))-1)/(a-1) ; a != 1 =Ejer8.js
	

	4a. calculate s5 for a=2 =Ejer8.a.js
	

	



	

	# first ones
	

	3. teamBase   =log2x.js
	

	2. base 7       =log7x.js
	

	1. base b (prompt, let, optional)  =logx.js